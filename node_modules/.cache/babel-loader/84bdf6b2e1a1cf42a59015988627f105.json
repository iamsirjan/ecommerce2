{"ast":null,"code":"export const initialState = {\n  basket: [],\n  user: null\n};\nexport const getBasketTotal = basket => basket === null || basket === void 0 ? void 0 : basket.reduce((amount, item) => item.price + amount, 0);\n\nfunction reducer(state, action) {\n  switch (action.type) {\n    case \"ADD_TO_BASKET\":\n      return { ...state,\n        basket: [...state.basket, action.item]\n      };\n\n    case \"REMOVE_FROM_BASKET\":\n      let newBasket = [...state.basket];\n      const index = state.basket.findIndex(basketItem => basketItem.id === action.id);\n\n      if (index >= 0) {\n        //item exist in the basket, remove it\n        newBasket.splice(index, 1);\n      } else {\n        console.warn(`Can't remove product{id: ${action.id}} as it is not in the basket`);\n      }\n\n      return { ...state,\n        basket: newBasket\n      };\n\n    default:\n      return state;\n  }\n}\n\nexport default reducer;","map":{"version":3,"sources":["/home/supreme/final-assignment-viper143-1/reactapp/src/Component/reducer.js"],"names":["initialState","basket","user","getBasketTotal","reduce","amount","item","price","reducer","state","action","type","newBasket","index","findIndex","basketItem","id","splice","console","warn"],"mappings":"AAAA,OAAO,MAAMA,YAAY,GAAG;AAC1BC,EAAAA,MAAM,EAAE,EADkB;AAE1BC,EAAAA,IAAI,EAAE;AAFoB,CAArB;AAKP,OAAO,MAAMC,cAAc,GAAIF,MAAD,IAC5BA,MAD4B,aAC5BA,MAD4B,uBAC5BA,MAAM,CAAEG,MAAR,CAAe,CAACC,MAAD,EAASC,IAAT,KAAkBA,IAAI,CAACC,KAAL,GAAaF,MAA9C,EAAsD,CAAtD,CADK;;AAGP,SAASG,OAAT,CAAiBC,KAAjB,EAAwBC,MAAxB,EAAgC;AAC9B,UAAQA,MAAM,CAACC,IAAf;AACE,SAAK,eAAL;AACE,aAAO,EACL,GAAGF,KADE;AAELR,QAAAA,MAAM,EAAE,CAAC,GAAGQ,KAAK,CAACR,MAAV,EAAkBS,MAAM,CAACJ,IAAzB;AAFH,OAAP;;AAIF,SAAK,oBAAL;AACE,UAAIM,SAAS,GAAG,CAAC,GAAGH,KAAK,CAACR,MAAV,CAAhB;AACA,YAAMY,KAAK,GAAGJ,KAAK,CAACR,MAAN,CAAaa,SAAb,CACXC,UAAD,IAAgBA,UAAU,CAACC,EAAX,KAAkBN,MAAM,CAACM,EAD7B,CAAd;;AAGA,UAAIH,KAAK,IAAI,CAAb,EAAgB;AACd;AACAD,QAAAA,SAAS,CAACK,MAAV,CAAiBJ,KAAjB,EAAwB,CAAxB;AACD,OAHD,MAGO;AACLK,QAAAA,OAAO,CAACC,IAAR,CACG,4BAA2BT,MAAM,CAACM,EAAG,8BADxC;AAGD;;AACD,aAAO,EACL,GAAGP,KADE;AAELR,QAAAA,MAAM,EAAEW;AAFH,OAAP;;AAIF;AACE,aAAOH,KAAP;AAxBJ;AA0BD;;AACD,eAAeD,OAAf","sourcesContent":["export const initialState = {\n  basket: [],\n  user: null,\n};\n\nexport const getBasketTotal = (basket) =>\n  basket?.reduce((amount, item) => item.price + amount, 0);\n\nfunction reducer(state, action) {\n  switch (action.type) {\n    case \"ADD_TO_BASKET\":\n      return {\n        ...state,\n        basket: [...state.basket, action.item],\n      };\n    case \"REMOVE_FROM_BASKET\":\n      let newBasket = [...state.basket];\n      const index = state.basket.findIndex(\n        (basketItem) => basketItem.id === action.id\n      );\n      if (index >= 0) {\n        //item exist in the basket, remove it\n        newBasket.splice(index, 1);\n      } else {\n        console.warn(\n          `Can't remove product{id: ${action.id}} as it is not in the basket`\n        );\n      }\n      return {\n        ...state,\n        basket: newBasket,\n      };\n    default:\n      return state;\n  }\n}\nexport default reducer;\n"]},"metadata":{},"sourceType":"module"}